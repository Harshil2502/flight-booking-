name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run linting
        run: npx eslint . --ext .ts,.tsx --max-warnings 0

  build-android-dev:
    name: Build Android APK (Development)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build Android APK (Development)
        run: eas build --platform android --profile development --non-interactive

      - name: Download APK
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-dev.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-dev-apk
          path: app-dev.apk

  build-android-staging:
    name: Build Android APK (Staging)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build Android APK (Staging)
        run: eas build --platform android --profile staging --non-interactive

      - name: Download APK
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-staging.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-staging-apk
          path: app-staging.apk

  build-android-production:
    name: Build Android APK (Production)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build Android APK (Production)
        run: eas build --platform android --profile production --non-interactive

      - name: Download APK
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-production.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-production-apk
          path: app-production.apk

  deploy:
    name: Deploy to Expo
    runs-on: ubuntu-latest
    needs: [build-android-staging, build-android-production]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Submit to Google Play Store (if configured)
        run: eas submit --platform android --latest
        continue-on-error: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-staging.apk
            app-production.apk
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            Automated release for commit ${{ github.sha }}
            
            ## Changes
            - Automated build and deployment
            - Android APK included
            
            ## Download
            - Staging APK: Available in artifacts
            - Production APK: Available in artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 