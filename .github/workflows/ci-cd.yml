name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run linting
        run: npx eslint . --max-warnings 100

  build-android-dev:
    name: Build Android APK (Development)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build Android APK (Development)
        run: eas build --platform android --profile development --non-interactive

      - name: Download APK
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-dev.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-dev-apk
          path: app-dev.apk

  build-ios-dev:
    name: Build iOS IPA (Development)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build iOS IPA (Development)
        run: eas build --platform ios --profile development --non-interactive

      - name: Download IPA
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-dev.ipa

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-dev-ipa
          path: app-dev.ipa

  build-android-staging:
    name: Build Android APK (Staging)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build Android APK (Staging)
        run: eas build --platform android --profile staging --non-interactive

      - name: Download APK
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-staging.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-staging-apk
          path: app-staging.apk

  build-ios-staging:
    name: Build iOS IPA (Staging)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build iOS IPA (Staging)
        run: eas build --platform ios --profile staging --non-interactive

      - name: Download IPA
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-staging.ipa

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-staging-ipa
          path: app-staging.ipa

  build-android-testing:
    name: Build Android APK (Testing)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build Android APK (Testing)
        run: eas build --platform android --profile testing --non-interactive

      - name: Download APK
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-testing.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-testing-apk
          path: app-testing.apk

  build-ios-testing:
    name: Build iOS IPA (Testing)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Configure EAS
        run: eas build:configure

      - name: Build iOS IPA (Testing)
        run: eas build --platform ios --profile testing --non-interactive

      - name: Download IPA
        run: eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs curl -L -o app-testing.ipa

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-testing-ipa
          path: app-testing.ipa

  deploy:
    name: Create Testing Release
    runs-on: ubuntu-latest
    needs: [build-android-staging, build-android-testing, build-ios-staging, build-ios-testing]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Login to Expo
        run: eas login --non-interactive --token $EXPO_TOKEN

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-staging.apk
            app-testing.apk
            app-staging.ipa
            app-testing.ipa
          tag_name: v${{ github.run_number }}
          name: Testing Release v${{ github.run_number }}
          body: |
            Testing release for commit ${{ github.sha }}
            
            ## Build Information
            - Automated build for testing team
            - Android APK and iOS IPA included
            
            ## Download Links
            ### Android
            - Staging APK: Available in artifacts
            - Testing APK: Available in artifacts
            
            ### iOS
            - Staging IPA: Available in artifacts
            - Testing IPA: Available in artifacts
            
            ## Testing Instructions
            1. Download the appropriate build for your device
            2. Install and test the application
            3. Report any issues found
            4. Provide feedback on new features
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 