name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EAS_PROJECT_ID: ${{ secrets.EAS_PROJECT_ID }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci
      - run: npx tsc --noEmit
      - run: npx eslint . --max-warnings 200

  build:
    name: Build ${{ matrix.platform }} (${{ matrix.profile }})
    runs-on: ubuntu-latest
    needs: test
    environment: flight booking
    strategy:
      matrix:
        include:
          - platform: android
            profile: development
            branch: develop
          - platform: ios
            profile: development
            branch: develop
          - platform: android
            profile: staging
            branch: main
          - platform: ios
            profile: staging
            branch: main
          - platform: android
            profile: testing
            branch: main
          - platform: ios
            profile: testing
            branch: main

    steps:
      - name: Check if branch matches
        id: branch-check
        run: |
          if [[ "${GITHUB_REF##refs/heads/}" != "${{ matrix.branch }}" ]]; then
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi

      - name: Skip if branch doesn't match
        if: env.skip == 'true'
        run: echo "Skipping build for ${{ matrix.platform }} (${{ matrix.profile }})" && exit 0

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci

      - uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build App
        run: eas build --platform ${{ matrix.platform }} --profile ${{ matrix.profile }} --non-interactive

      - name: Download Build Artifact
        run: |
          FILE_NAME="app-${{ matrix.profile }}.${{ matrix.platform == 'android' && 'apk' || 'ipa' }}"
          URL=$(eas build:list --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          curl -L -o $FILE_NAME $URL
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.profile }}
          path: ${{ env.FILE_NAME }}

  deploy:
    name: Create Testing Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci

      - uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - uses: actions/download-artifact@v4

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            android-staging/app-staging.apk
            android-testing/app-testing.apk
            ios-staging/app-staging.ipa
            ios-testing/app-testing.ipa
          tag_name: v${{ github.run_number }}
          name: Testing Release v${{ github.run_number }}
          body: |
            Testing release for commit ${{ github.sha }}
            
            ## Build Information
            - Automated build for testing team
            - Android APK and iOS IPA included
            
            ## Download Links
            ### Android
            - Staging APK: Available in artifacts
            - Testing APK: Available in artifacts
            
            ### iOS
            - Staging IPA: Available in artifacts
            - Testing IPA: Available in artifacts
            
            ## Testing Instructions
            1. Download the appropriate build for your device
            2. Install and test the application
            3. Report any issues found
            4. Provide feedback on new features
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
